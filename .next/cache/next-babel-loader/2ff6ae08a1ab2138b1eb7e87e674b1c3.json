{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n            margin-left: 24px;\\n          \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n  padding: 16px 16px 0 16px;\\n  white-space: nowrap;\\n  color: \", \";\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  display: flex;\\n  align-items: center;\\n  margin-left: 24px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  & p {\\n    color: \", \";\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: none;\\n\\n  @media (min-width: \", \") {\\n    display: flex;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport Link from \"next-translate/Link\";\nimport useTranslation from \"next-translate/useTranslation\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport i18nConfig from \"../../i18n.json\";\nimport { theme } from \"../../theme/theme\";\nimport { NavDropdown } from \"./dropdown\";\nimport { NavLink } from \"./nav_link\";\nimport { SideMenu } from \"./sidemenu/side-menu\";\nimport { ToggleButton } from \"./ToggleButton\";\nvar allLanguages = i18nConfig.allLanguages;\nvar Nav = styled.nav(_templateObject(), theme.breakpoints.md);\nvar StyledNavDropdown = styled(NavDropdown)(_templateObject2(), function (props) {\n  return props.isActive ? theme.colors.darkBlue.high : theme.colors.darkBlue.medium;\n});\nvar NavItem = styled(NavLink)(_templateObject3(), function (props) {\n  return props.isActive ? theme.colors.darkBlue.high : theme.colors.darkBlue.medium;\n});\nvar DropdownItem = styled(NavLink)(_templateObject4(), theme.colors.white.high);\n\nvar Menu = function Menu() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      lang = _useTranslation.lang;\n\n  var router = useRouter();\n\n  var _useState = useState(false),\n      isSideMenuOpen = _useState[0],\n      setIsSideMenuOpen = _useState[1];\n\n  function openSideMenu() {\n    setIsSideMenuOpen(true);\n  }\n\n  function closeSideMenu() {\n    setIsSideMenuOpen(false);\n  }\n\n  var getCurrentUrlWithoutLang = function getCurrentUrlWithoutLang() {\n    var asPath = router.asPath;\n    var paths = asPath.split(\"/\");\n    var cl = paths[1];\n\n    if (allLanguages.includes(cl)) {\n      var url = paths.filter(function (_, i) {\n        return i !== 1;\n      }).join(\"/\");\n      return url || \"/\";\n    }\n\n    return cl || \"/\";\n  };\n\n  var getActiveMenu = function getActiveMenu(_currentUrl, menuUrl) {\n    var count = _currentUrl.split(\"/\").length - 1;\n    var currentUrl = _currentUrl;\n\n    if (count === 1) {\n      currentUrl = currentUrl.substring(1);\n    } else if (count === 2) {\n      currentUrl = currentUrl.substring(currentUrl.indexOf(\"/\") + 1);\n      currentUrl = currentUrl.substring(0, currentUrl.indexOf(\"/\"));\n    }\n\n    if (!Boolean(currentUrl)) {\n      return false;\n    }\n\n    return Array.isArray(menuUrl) ? menuUrl.some(function (menu) {\n      return menu.includes(currentUrl);\n    }) : currentUrl.includes(menuUrl);\n  };\n\n  var currentUrl = getCurrentUrlWithoutLang();\n  return __jsx(React.Fragment, null, __jsx(Nav, null, __jsx(StyledNavDropdown, {\n    isActive: getActiveMenu(currentUrl, [\"about-company\", \"about-team\"]),\n    title: t(\"header:about\")\n  }, __jsx(Link, {\n    href: \"/about-company\",\n    passHref: true\n  }, __jsx(DropdownItem, null, t(\"header:about-company\"))), __jsx(Link, {\n    href: \"/about-team\",\n    passHref: true\n  }, __jsx(DropdownItem, null, t(\"header:about-team\")))), __jsx(Link, {\n    href: \"/portfolio\",\n    passHref: true\n  }, __jsx(NavItem, {\n    isActive: getActiveMenu(currentUrl, [\"portfolio\", \"project\"])\n  }, t(\"header:portfolio\"))), __jsx(Link, {\n    href: \"/blog\",\n    passHref: true\n  }, __jsx(NavItem, {\n    isActive: getActiveMenu(currentUrl, [\"blog\", \"post\"])\n  }, t(\"header:blog\"))), __jsx(Link, {\n    href: \"/pricing\",\n    passHref: true\n  }, __jsx(NavItem, {\n    isActive: getActiveMenu(currentUrl, \"pricing\")\n  }, t(\"header:pricing\"))), __jsx(Link, {\n    href: \"/contact\",\n    passHref: true\n  }, __jsx(NavItem, {\n    isActive: getActiveMenu(currentUrl, \"contact\")\n  }, t(\"header:contact\"))), __jsx(StyledNavDropdown, {\n    title: lang,\n    isActive: true,\n    css: css(_templateObject5())\n  }, allLanguages.map(function (lng) {\n    if (lng === lang) return null;\n    return __jsx(Link, {\n      href: currentUrl,\n      lang: lng,\n      key: lng,\n      passHref: true\n    }, __jsx(DropdownItem, {\n      onClick: function onClick() {\n        document.documentElement.lang = lng;\n      }\n    }, lng));\n  }))), __jsx(ToggleButton, {\n    \"aria-label\": \"Toggle side menu button\",\n    onClick: openSideMenu\n  }), __jsx(SideMenu, {\n    isOpen: isSideMenuOpen,\n    onClose: closeSideMenu\n  }));\n};\n\nexport default Menu;","map":null,"metadata":{},"sourceType":"module"}