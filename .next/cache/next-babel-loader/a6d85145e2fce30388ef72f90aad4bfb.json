{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { css } from \"@emotion/core\";\nimport Link from \"next-translate/Link\";\nimport useTranslation from \"next-translate/useTranslation\";\nimport { theme } from \"../../theme/theme\";\nimport { Typography } from \"../Typography\";\nconst action = css`\n  width: 180px;\n  height: 180px;\n  border-radius: 50%;\n  border: 1px solid ${theme.colors.white.disabled};\n  display: inline-flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n\n  @media (max-width: ${theme.breakpoints.md}) {\n    bottom: 32px;\n    left: 16px;\n  }\n`;\nconst actionIcon = css`\n  margin-bottom: 20px;\n`;\nconst actionText = css`\n  color: #f1ebe5;\n  text-transform: uppercase;\n  line-height: 16px;\n`;\nconst content = css`\n  width: 72px;\n`;\nexport const ShowGalleryLink = (_ref) => {\n  let rest = Object.assign({}, _ref);\n  const {\n    t\n  } = useTranslation();\n  return __jsx(Link, {\n    href: \"/portfolio\",\n    passHref: true\n  }, __jsx(\"a\", _extends({\n    css: action\n  }, rest), __jsx(\"div\", {\n    css: content\n  }, __jsx(\"img\", {\n    css: actionIcon,\n    src: \"/static/arrow-slider.svg\",\n    width: 18,\n    height: 16,\n    alt: \"Action icon\"\n  }), __jsx(Typography, {\n    css: actionText,\n    text: t(\"home:sliderAction\")\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}