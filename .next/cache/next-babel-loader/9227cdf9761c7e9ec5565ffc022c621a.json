{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { request } from \"graphql-request\";\nimport capitalize from \"lodash/capitalize\";\nimport { imageFromJson, imageQueryFields } from \"../core/models\";\nimport { GRAPHQL_BASE_URL } from \"../graphql/apollo-client\";\nexport var AboutCompanyService = {\n  getOneQuery: function getOneQuery(lang, isSubQuery) {\n    var lng = capitalize(lang);\n    var query = \"\\n      about {\\n        title\".concat(lng, \"\\n        text\").concat(lng, \"\\n        image {\\n          \").concat(imageQueryFields, \"\\n        }\\n        image1 {\\n          \").concat(imageQueryFields, \"\\n        }\\n        image2 {\\n          \").concat(imageQueryFields, \"\\n        }\\n        image3 {\\n          \").concat(imageQueryFields, \"\\n        }\\n        image4 {\\n          \").concat(imageQueryFields, \"\\n        }\\n      }\\n    \");\n    return isSubQuery ? query : \"{\".concat(query, \"}\");\n  },\n  getOne: function getOne(query, lang) {\n    var res;\n    return _regeneratorRuntime.async(function getOne$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(request(GRAPHQL_BASE_URL, query));\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", AboutCompanyService.fromJson(res.about, lang));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  fromJson: function fromJson(json, lang) {\n    var lng = capitalize(lang);\n    return {\n      title: json[\"title\".concat(lng)],\n      text: json[\"text\".concat(lng)],\n      image: imageFromJson(json.image),\n      image1: imageFromJson(json.image1),\n      image2: imageFromJson(json.image2),\n      image3: imageFromJson(json.image3),\n      image4: imageFromJson(json.image4)\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module"}