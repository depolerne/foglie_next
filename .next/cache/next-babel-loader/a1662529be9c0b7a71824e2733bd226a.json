{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { TextLBH3 } from \"../../public/design/components/typography/libre-baskerville\";\nimport { theme } from \"../../theme/theme\";\nimport { Img } from \"../Img\";\n\nconst container = count => css`\n  width: 100%;\n  display: grid;\n  position: relative;\n  grid-template-columns: repeat(${count}, minmax(auto, 360px));\n  grid-template-rows: repeat(2, 1fr);\n  grid-gap: 1px;\n`;\n\nconst imageStyle = {\n  display: \"block\",\n  height: \"100%\",\n  width: \"100%\"\n};\nconst StyledImageContainer = styled.div`\n  width: ${props => props.size - 1 + \"px\"};\n  height: ${props => props.size - 1 + \"px\"};\n`;\nconst hashtagStyle = css`\n  max-width: 550px;\n  min-width: 380px;\n  width: 50%;\n  height: 128px;\n  background-color: ${theme.colors.white.high};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Hashtag = () => {\n  return __jsx(\"div\", {\n    css: hashtagStyle\n  }, __jsx(TextLBH3, null, \"#fogliedalloro\"));\n};\n\nconst Image = props => {\n  return __jsx(Img, {\n    style: imageStyle,\n    \"data-src\": props.img,\n    alt: \"Instagram image\"\n  });\n};\n\nconst getImages = (images, count) => {\n  const renderedImages = [];\n\n  for (let i = 0; i < count * 2; i++) {\n    if (images[i]) {\n      renderedImages.push({\n        id: images[i].id,\n        src: images[i].media_url\n      });\n    }\n  }\n\n  return renderedImages;\n};\n\nconst getImagesCountInRow = (images, windowWidth) => {\n  const imageMinSize = 240;\n  const imagesMinCountInRow = 6;\n  const imagesMaxCountInRow = images.length / 2;\n  let imagesCountInRow = Math.floor(windowWidth / imageMinSize);\n\n  if (imagesCountInRow < imagesMinCountInRow) {\n    imagesCountInRow = imagesMinCountInRow;\n  }\n\n  if (imagesCountInRow > imagesMaxCountInRow) {\n    imagesCountInRow = imagesMaxCountInRow;\n  }\n\n  return imagesCountInRow;\n};\n\nconst InstagramImages = ({\n  images\n}) => {\n  const containerRef = useRef(null);\n  const {\n    0: windowWidth,\n    1: setWindowWidth\n  } = useState(0);\n  const imagesCountInRow = getImagesCountInRow(images, windowWidth);\n  const imageSize = Math.floor(windowWidth / imagesCountInRow);\n  useEffect(() => {\n    if (containerRef === null || containerRef === void 0 ? void 0 : containerRef.current) {\n      setWindowWidth(containerRef.current.offsetWidth);\n    }\n  }, []);\n  return __jsx(\"a\", {\n    ref: containerRef,\n    css: container(imagesCountInRow),\n    href: \"https://www.instagram.com/fogliedalloro/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, __jsx(Hashtag, null), getImages(images, imagesCountInRow).map(img => __jsx(StyledImageContainer, {\n    key: img.id,\n    size: imageSize\n  }, __jsx(Image, {\n    img: img.src\n  }))));\n};\n\nexport default InstagramImages;","map":null,"metadata":{},"sourceType":"module"}