{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport Link from \"next-translate/Link\";\nimport useTranslation from \"next-translate/useTranslation\";\nimport { useRouter } from \"next/dist/client/router\";\nimport { theme } from \"../../theme/theme\";\nconst Wrapper = styled.div`\n  display: flex;\n  margin-top: 64px;\n  margin-bottom: 32px;\n`;\nconst Category = styled.a`\n  display: inline-flex;\n  padding-right: 15px;\n  color: ${theme.colors.black};\n  text-decoration: none;\n  text-transform: uppercase;\n  /* color: ${theme.colors.darkBlue.medium}; */\n`;\nconst CategoryFamily = styled.div`\n  display: flex;\n\n  .child-catagory {\n    transition: 0.3s opacity ease;\n    /* color: ${theme.colors.burlyWood.high}; */\n  }\n\n  :hover {\n    .child-catagory {\n      display: block;\n    }\n  }\n`;\nexport const ProjectsNavbar = ({\n  categories\n}) => {\n  var _router$query, _router$query$categor;\n\n  const {\n    t\n  } = useTranslation();\n  const router = useRouter();\n  const selectedCategoryId = router === null || router === void 0 ? void 0 : (_router$query = router.query) === null || _router$query === void 0 ? void 0 : (_router$query$categor = _router$query.category) === null || _router$query$categor === void 0 ? void 0 : _router$query$categor.toString();\n  return __jsx(Wrapper, null, __jsx(Link, {\n    href: \"/portfolio\",\n    passHref: true\n  }, __jsx(Category, {\n    css: css`\n            color: ${!selectedCategoryId ? `${theme.colors.darkBlue.high}` : `${theme.colors.darkBlue.medium}`};\n          `\n  }, t(\"portfolio:all\"))), categories.map(c => {\n    const isOneOfGroupItemSelected = c.id == selectedCategoryId || c.children.find(ca => ca.id == selectedCategoryId);\n    return __jsx(CategoryFamily, {\n      key: c.id\n    }, __jsx(Link, {\n      href: `/portfolio?category=${c.id}`,\n      passHref: true\n    }, __jsx(Category, {\n      css: css`\n                  color: ${selectedCategoryId == c.id ? `${theme.colors.darkBlue.high}` : `${theme.colors.darkBlue.medium}`};\n                `\n    }, c.name)), c.children.map(sc => {\n      return __jsx(Link, {\n        key: sc.id,\n        href: `/portfolio?category=${sc.id}`,\n        passHref: true\n      }, __jsx(Category, {\n        className: \"child-catagory\",\n        css: css`\n                      display: ${isOneOfGroupItemSelected ? \"block\" : \"none\"};\n                      color: ${selectedCategoryId == sc.id ? `${theme.colors.darkBlue.high}` : `${theme.colors.burlyWood.high}`};\n                    `\n      }, sc.name));\n    }));\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}