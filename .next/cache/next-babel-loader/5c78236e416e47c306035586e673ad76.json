{"ast":null,"code":"var __jsx = React.createElement;\nimport styled from \"@emotion/styled\";\nimport React, { useRef } from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport Zoom from \"react-medium-image-zoom\";\nimport { theme } from \"../theme/theme\";\nconst Content = styled.div`\n  margin-bottom: 50px;\n\n  p {\n    margin-bottom: 1rem;\n    display: flex;\n    justify-content: space-between;\n\n    @media (max-width: ${theme.breakpoints.md}) {\n      display: block;\n\n      & div {\n        width: 100% !important;\n        height: auto !important;\n        margin-bottom: 1rem;\n      }\n    }\n  }\n\n  img {\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nconst setImageSize = size => {\n  if (!size) {\n    return \"\";\n  }\n\n  return size.includes(\"%\") ? size : `${size}px`;\n};\n\nexport const EditorContent = ({\n  content\n}) => {\n  const container = useRef(null);\n\n  function transform(node) {\n    if (node.type === \"tag\" && node.name === \"img\") {\n      const img = React.createElement(\"img\", {\n        src: node.attribs.src,\n        alt: \"Project photo\"\n      });\n      const width = setImageSize(node.attribs.width);\n      const height = setImageSize(node.attribs.height);\n      return __jsx(Zoom, {\n        wrapStyle: {\n          width: width,\n          height: height,\n          float: node.attribs.style ? \"right\" : \"none\"\n        }\n      }, img);\n    }\n  }\n\n  return __jsx(Content, {\n    ref: container\n  }, ReactHtmlParser(content, {\n    transform\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}