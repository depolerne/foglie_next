{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { request } from \"graphql-request\";\nimport { GRAPHQL_BASE_URL } from \"../../graphql/apollo-client\";\nimport { AboutCompanyService } from \"../company-service\";\nimport { projectPreviewFromJson, ProjectService } from \"../projectService\";\nimport { homeBlogItemFromJson, HomeBlogService } from \"./home-blog-service\";\nimport { SliderService } from \"./slider-service\";\n\nfunction homeFromJson(data, lang) {\n  const posts = data.posts.data.map(json => homeBlogItemFromJson(json, lang));\n  const about = AboutCompanyService.fromJson(data.about, lang);\n  const slider = data.slider.map(j => SliderService.fromJson(j, lang));\n  return {\n    slider,\n    about,\n    posts,\n    projects: _objectSpread({}, data.projects, {\n      data: data.projects.data.map(j => projectPreviewFromJson(j, lang))\n    })\n  };\n}\n\nexport const HomeService = {\n  getQuery: lang => {\n    const sliderQuery = SliderService.getQuery(lang);\n    const aboutQuery = AboutCompanyService.getOneQuery(lang, true);\n    const postsQuery = HomeBlogService.getQuery(lang);\n    const projectsQuery = ProjectService.getManyQuery({\n      lang,\n      skip: 0,\n      take: 6,\n      isSubQuery: true\n    });\n    return `\n      {\n        ${sliderQuery}\n        ${aboutQuery}\n        ${projectsQuery}\n        ${postsQuery}\n      }\n    `;\n  },\n  get: async (query, lang) => {\n    const res = await request(GRAPHQL_BASE_URL, query);\n    return homeFromJson(res, lang);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}