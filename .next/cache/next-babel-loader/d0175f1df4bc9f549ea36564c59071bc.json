{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { request } from \"graphql-request\";\nimport { GRAPHQL_BASE_URL } from \"../../graphql/apollo-client\";\nimport { AboutCompanyService } from \"../company-service\";\nimport { projectPreviewFromJson, ProjectService } from \"../projectService\";\nimport { homeBlogItemFromJson, HomeBlogService } from \"./home-blog-service\";\nimport { SliderService } from \"./slider-service\";\n\nfunction homeFromJson(data, lang) {\n  var posts = data.posts.data.map(function (json) {\n    return homeBlogItemFromJson(json, lang);\n  });\n  var about = AboutCompanyService.fromJson(data.about, lang);\n  var slider = data.slider.map(function (j) {\n    return SliderService.fromJson(j, lang);\n  });\n  return {\n    slider: slider,\n    about: about,\n    posts: posts,\n    projects: _objectSpread({}, data.projects, {\n      data: data.projects.data.map(function (j) {\n        return projectPreviewFromJson(j, lang);\n      })\n    })\n  };\n}\n\nexport var HomeService = {\n  getQuery: function getQuery(lang) {\n    var sliderQuery = SliderService.getQuery(lang);\n    var aboutQuery = AboutCompanyService.getOneQuery(lang, true);\n    var postsQuery = HomeBlogService.getQuery(lang);\n    var projectsQuery = ProjectService.getManyQuery({\n      lang: lang,\n      skip: 0,\n      take: 6,\n      isSubQuery: true\n    });\n    return \"\\n      {\\n        \".concat(sliderQuery, \"\\n        \").concat(aboutQuery, \"\\n        \").concat(projectsQuery, \"\\n        \").concat(postsQuery, \"\\n      }\\n    \");\n  },\n  get: function get(query, lang) {\n    var res;\n    return _regeneratorRuntime.async(function get$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(request(GRAPHQL_BASE_URL, query));\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", homeFromJson(res, lang));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}