{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { css } from \"@emotion/core\";\nimport React from \"react\";\nimport { theme } from \"../../theme/theme\";\nimport { Typography } from \"../Typography\";\nconst subtitleBlock = css`\n  position: relative;\n  height: 40px;\n  display: flex;\n  align-items: center;\n`;\nconst brownBlock = css`\n  background-color: ${theme.colors.burlyWood.high};\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 150px;\n  z-index:0;\n\n  /* @media (max-width: ${theme.breakpoints.xl}) {\n    display: none;\n  } */\n`;\nconst textCss = css`\n  position: relative;\n  z-index: 1;\n  margin-left: 65px;\n`;\nexport const Subtitle = (_ref) => {\n  let {\n    text\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"text\"]);\n\n  return __jsx(\"div\", _extends({\n    css: subtitleBlock\n  }, rest), __jsx(\"div\", {\n    css: brownBlock\n  }), __jsx(Typography, {\n    text: text,\n    css: textCss\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}