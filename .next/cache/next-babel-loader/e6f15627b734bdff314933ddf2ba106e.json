{"ast":null,"code":"import { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport fetch from \"isomorphic-unfetch\";\nimport withApollo from \"next-with-apollo\"; // Update the GraphQL endpoint to any instance of GraphQL that you like\n\nexport const GRAPHQL_BASE_URL = false ? \"http://localhost:4400/graphql\" : \"https://foglie-dialloro-api.herokuapp.com/graphql\";\nconst link = createHttpLink({\n  fetch,\n  // Switches between unfetch & node-fetch for client & server.\n  uri: GRAPHQL_BASE_URL\n}); // Export a HOC from next-with-apollo\n// Docs: https://www.npmjs.com/package/next-with-apollo\n\nexport default withApollo( // You can get headers and ctx (context) from the callback params\n// e.g. ({ headers, ctx, initialState })\n({\n  initialState\n}) => new ApolloClient({\n  link: link,\n  cache: new InMemoryCache() //  rehydrate the cache using the initial data passed from the server:\n  .restore(initialState || {})\n}));","map":null,"metadata":{},"sourceType":"module"}