{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport request from \"graphql-request\";\nimport { GRAPHQL_BASE_URL } from \"../graphql/apollo-client\";\nexport var ContactService = {\n  sendMessageQuery: function sendMessageQuery(name, email, message) {\n    return \"\\n        {\\n            sendMail (name: \\\"\".concat(name, \"\\\", email: \\\"\").concat(email, \"\\\", message: \\\"\").concat(message, \"\\\") {\\n                success\\n            }\\n        }\\n    \");\n  },\n  sendMessage: function sendMessage(query, name, email, message) {\n    return _regeneratorRuntime.async(function sendMessage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(request(GRAPHQL_BASE_URL, query, {\n              name: name,\n              email: email,\n              message: message\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}