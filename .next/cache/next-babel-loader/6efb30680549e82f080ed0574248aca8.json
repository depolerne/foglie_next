{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"@emotion/styled\";\nimport { useState } from \"react\";\nimport { theme } from \"../../../theme/theme\";\nimport { NavLink } from \"../nav_link\";\nconst StyledNavDropdown = styled.div`\n  margin-bottom: 24px;\n  align-items: center;\n  cursor: pointer;\n  z-index: 1;\n\n  text-align: ${props => props.isLanguage ? \"right\" : \"left\"};\n  display: ${props => props.isLanguage ? \"inline-block\" : \"block\"};\n\n  p,\n  svg {\n    color: ${theme.colors.darkBlue.medium};\n    transition: 0.2s color ease-in-out;\n  }\n\n  &:active {\n    p,\n    svg {\n      color: ${theme.colors.black};\n    }\n  }\n`;\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n\n  :active {\n    p,\n    svg {\n      color: ${theme.colors.black};\n    }\n  }\n`;\nconst StyledText = styled(NavLink)`\n  margin-right: 3px;\n`;\nconst Menu = styled.nav`\n  opacity: 0;\n  height: 0;\n  transition: 0.2s all ease;\n  pointer-events: ${props => props.isOpen ? \"auto\" : \"none\"};\n  opacity: ${props => props.isOpen ? 1 : 0};\n  height: ${props => props.isOpen ? \"auto\" : 0};\n  margin-top: ${props => props.isOpen ? \"16px\" : 0};\n  display: ${props => props.isLanguage ? \"inline-block\" : \"block\"};\n\n  a {\n    pointer-events: ${props => props.isOpen ? \"auto\" : \"none\"};\n  }\n`;\nexport const SideMenuDropdown = ({\n  title,\n  isLanguage = false,\n  children\n}) => {\n  const {\n    0: isOpen,\n    1: setOpen\n  } = useState(false);\n\n  function toggleMenu(event) {\n    event.stopPropagation();\n    setOpen(!isOpen);\n  }\n\n  return __jsx(StyledNavDropdown, {\n    isLanguage: isLanguage\n  }, __jsx(Title, {\n    onClick: e => toggleMenu(e)\n  }, __jsx(StyledText, null, title), __jsx(\"img\", {\n    src: \"/static/dropdown.svg\",\n    alt: \"Dropdown\"\n  })), __jsx(Menu, {\n    isOpen: isOpen,\n    isLanguage: isLanguage\n  }, children));\n};","map":null,"metadata":{},"sourceType":"module"}