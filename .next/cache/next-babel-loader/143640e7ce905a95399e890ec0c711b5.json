{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  max-width: 550px;\\n  min-width: 380px;\\n  width: 50%;\\n  height: 128px;\\n  background-color: \", \";\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: \", \";\\n  height: \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: grid;\\n  position: relative;\\n  grid-template-columns: repeat(\", \", minmax(auto, 360px));\\n  grid-template-rows: repeat(2, 1fr);\\n  grid-gap: 1px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { TextLBH3 } from \"../../public/design/components/typography/libre-baskerville\";\nimport { theme } from \"../../theme/theme\";\nimport { Img } from \"../Img\";\n\nvar container = function container(count) {\n  return css(_templateObject(), count);\n};\n\nvar imageStyle = {\n  display: \"block\",\n  height: \"100%\",\n  width: \"100%\"\n};\nvar StyledImageContainer = styled.div(_templateObject2(), function (props) {\n  return props.size - 1 + \"px\";\n}, function (props) {\n  return props.size - 1 + \"px\";\n});\nvar hashtagStyle = css(_templateObject3(), theme.colors.white.high);\n\nvar Hashtag = function Hashtag() {\n  return __jsx(\"div\", {\n    css: hashtagStyle\n  }, __jsx(TextLBH3, null, \"#fogliedalloro\"));\n};\n\nvar Image = function Image(props) {\n  return __jsx(Img, {\n    style: imageStyle,\n    \"data-src\": props.img,\n    alt: \"Instagram image\"\n  });\n};\n\nvar getImages = function getImages(images, count) {\n  var renderedImages = [];\n\n  for (var i = 0; i < count * 2; i++) {\n    if (images[i]) {\n      renderedImages.push({\n        id: images[i].id,\n        src: images[i].media_url\n      });\n    }\n  }\n\n  return renderedImages;\n};\n\nvar getImagesCountInRow = function getImagesCountInRow(images, windowWidth) {\n  var imageMinSize = 240;\n  var imagesMinCountInRow = 6;\n  var imagesMaxCountInRow = images.length / 2;\n  var imagesCountInRow = Math.floor(windowWidth / imageMinSize);\n\n  if (imagesCountInRow < imagesMinCountInRow) {\n    imagesCountInRow = imagesMinCountInRow;\n  }\n\n  if (imagesCountInRow > imagesMaxCountInRow) {\n    imagesCountInRow = imagesMaxCountInRow;\n  }\n\n  return imagesCountInRow;\n};\n\nvar InstagramImages = function InstagramImages(_ref) {\n  var images = _ref.images;\n  var containerRef = useRef(null);\n\n  var _useState = useState(0),\n      windowWidth = _useState[0],\n      setWindowWidth = _useState[1];\n\n  var imagesCountInRow = getImagesCountInRow(images, windowWidth);\n  var imageSize = Math.floor(windowWidth / imagesCountInRow);\n  useEffect(function () {\n    if (containerRef === null || containerRef === void 0 ? void 0 : containerRef.current) {\n      setWindowWidth(containerRef.current.offsetWidth);\n    }\n  }, []);\n  return __jsx(\"a\", {\n    ref: containerRef,\n    css: container(imagesCountInRow),\n    href: \"https://www.instagram.com/fogliedalloro/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, __jsx(Hashtag, null), getImages(images, imagesCountInRow).map(function (img) {\n    return __jsx(StyledImageContainer, {\n      key: img.id,\n      size: imageSize\n    }, __jsx(Image, {\n      img: img.src\n    }));\n  }));\n};\n\nexport default InstagramImages;","map":null,"metadata":{},"sourceType":"module"}