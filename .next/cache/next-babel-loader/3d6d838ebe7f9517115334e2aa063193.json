{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-bottom: 50px;\\n\\n  p {\\n    margin-bottom: 1rem;\\n    display: flex;\\n    justify-content: space-between;\\n\\n    @media (max-width: \", \") {\\n      display: block;\\n\\n      & div {\\n        width: 100% !important;\\n        height: auto !important;\\n        margin-bottom: 1rem;\\n      }\\n    }\\n  }\\n\\n  img {\\n    height: 100%;\\n    width: 100%;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"@emotion/styled\";\nimport React, { useRef } from \"react\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport Zoom from \"react-medium-image-zoom\";\nimport { theme } from \"../theme/theme\";\nvar Content = styled.div(_templateObject(), theme.breakpoints.md);\n\nvar setImageSize = function setImageSize(size) {\n  if (!size) {\n    return \"\";\n  }\n\n  return size.includes(\"%\") ? size : \"\".concat(size, \"px\");\n};\n\nexport var EditorContent = function EditorContent(_ref) {\n  var content = _ref.content;\n  var container = useRef(null);\n\n  function transform(node) {\n    if (node.type === \"tag\" && node.name === \"img\") {\n      var img = React.createElement(\"img\", {\n        src: node.attribs.src,\n        alt: \"Project photo\"\n      });\n      var width = setImageSize(node.attribs.width);\n      var height = setImageSize(node.attribs.height);\n      return __jsx(Zoom, {\n        wrapStyle: {\n          width: width,\n          height: height,\n          float: node.attribs.style ? \"right\" : \"none\"\n        }\n      }, img);\n    }\n  }\n\n  return __jsx(Content, {\n    ref: container\n  }, ReactHtmlParser(content, {\n    transform: transform\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}